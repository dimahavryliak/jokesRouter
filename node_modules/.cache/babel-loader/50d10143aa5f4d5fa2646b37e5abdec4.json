{"ast":null,"code":"const FIREBASE_ROOT_DOMAIN = \"https://react-learn-e675d-default-rtdb.firebaseio.com\";\nexport async function getJokes() {\n  const response = await fetch(`${FIREBASE_ROOT_DOMAIN}/jokes.json`);\n  const data = await response.json();\n  if (!response.ok) {\n    throw new Error(data.message || \"Jokes fetching error.\");\n  }\n  const convertedJokes = [];\n  for (const key in data) {\n    const joke = {\n      id: key,\n      ...data[key]\n    };\n    convertedJokes.push(joke);\n  }\n  return convertedJokes;\n}\nexport async function getJoke(jokeId) {\n  const response = await fetch(`${FIREBASE_ROOT_DOMAIN}/jokes/${jokeId}.json`);\n  const data = await response.json();\n  if (!response.ok) {\n    throw new Error(data.message || \"Joke fetching error.\");\n  }\n  const convertedJoke = {\n    id: jokeId,\n    ...data\n  };\n  return convertedJoke;\n}\nexport async function addJoke(jokeData) {\n  const response = await fetch(`${FIREBASE_ROOT_DOMAIN}/jokes.json`, {\n    method: \"POST\",\n    body: JSON.stringify(jokeData),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const data = await response.json();\n  if (!response.ok) {\n    throw new Error(data.message || \"Joke adding error.\");\n  }\n}\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_ROOT_DOMAIN}/comments/${requestData.jokeId}.json`, {\n    method: \"POST\",\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const data = await response.json();\n  if (!response.ok) {\n    throw new Error(data.text || \"Comment adding error.\");\n  }\n  return {\n    commentId: data.username\n  };\n}\nexport async function getComments(jokeId) {\n  const response = await fetch(`${FIREBASE_ROOT_DOMAIN}/comments/${jokeId}.json`);\n  const data = await response.json();\n  if (!response.ok) {\n    throw new Error(data.message || \"Comments fetching error.\");\n  }\n  const convertedComments = [];\n  for (const key in data) {\n    const comment = {\n      id: key,\n      ...data[key]\n    };\n    convertedComments.push(comment);\n  }\n  return convertedComments;\n}","map":{"version":3,"names":["FIREBASE_ROOT_DOMAIN","getJokes","response","fetch","data","json","ok","Error","message","convertedJokes","key","joke","id","push","getJoke","jokeId","convertedJoke","addJoke","jokeData","method","body","JSON","stringify","headers","addComment","requestData","commentData","text","commentId","username","getComments","convertedComments","comment"],"sources":["E:/JS projects/routerJokes/src/utils/firebase-api.js"],"sourcesContent":["const FIREBASE_ROOT_DOMAIN =\n  \"https://react-learn-e675d-default-rtdb.firebaseio.com\";\n\nexport async function getJokes() {\n  const response = await fetch(`${FIREBASE_ROOT_DOMAIN}/jokes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Jokes fetching error.\");\n  }\n\n  const convertedJokes = [];\n\n  for (const key in data) {\n    const joke = {\n      id: key,\n      ...data[key],\n    };\n\n    convertedJokes.push(joke);\n  }\n\n  return convertedJokes;\n}\n\nexport async function getJoke(jokeId) {\n  const response = await fetch(`${FIREBASE_ROOT_DOMAIN}/jokes/${jokeId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Joke fetching error.\");\n  }\n\n  const convertedJoke = {\n    id: jokeId,\n    ...data,\n  };\n\n  return convertedJoke;\n}\n\nexport async function addJoke(jokeData) {\n  const response = await fetch(`${FIREBASE_ROOT_DOMAIN}/jokes.json`, {\n    method: \"POST\",\n    body: JSON.stringify(jokeData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Joke adding error.\");\n  }\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(\n    `${FIREBASE_ROOT_DOMAIN}/comments/${requestData.jokeId}.json`,\n    {\n      method: \"POST\",\n      body: JSON.stringify(requestData.commentData),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.text || \"Comment adding error.\");\n  }\n\n  return { commentId: data.username };\n}\n\nexport async function getComments(jokeId) {\n  const response = await fetch(\n    `${FIREBASE_ROOT_DOMAIN}/comments/${jokeId}.json`\n  );\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Comments fetching error.\");\n  }\n\n  const convertedComments = [];\n\n  for (const key in data) {\n    const comment = {\n      id: key,\n      ...data[key],\n    };\n\n    convertedComments.push(comment);\n  }\n\n  return convertedComments;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}